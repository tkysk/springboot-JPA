# https://github.com/hibernate/hibernate-validator/blob/master/engine/src/main/resources/org/hibernate/validator/ValidationMessages.properties
#javax.validation.constraints.AssertFalse.message = must be false
#javax.validation.constraints.AssertTrue.message  = must be true
#javax.validation.constraints.DecimalMax.message  = must be less than ${inclusive == true ? 'or equal to ' : ''}{value}
#javax.validation.constraints.DecimalMin.message  = must be greater than ${inclusive == true ? 'or equal to ' : ''}{value}
#javax.validation.constraints.Digits.message      = numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
#javax.validation.constraints.Future.message      = must be in the future
javax.validation.constraints.Max.message={value}\u3088\u308A\u5927\u304D\u3044\u5024\u306F\u6307\u5B9A\u3067\u304D\u307E\u305B\u3093
javax.validation.constraints.Min.message={value}\u3088\u308A\u5C0F\u3055\u3044\u5024\u306F\u6307\u5B9A\u3067\u304D\u307E\u305B\u3093
javax.validation.constraints.NotNull.message=\u5165\u529B\u5FC5\u9808\u9805\u76EE\u3067\u3059
#javax.validation.constraints.Null.message        = must be null
#javax.validation.constraints.Past.message        = must be in the past
#javax.validation.constraints.Pattern.message     = must match "{regexp}"
#javax.validation.constraints.Size.message        = size must be between {min} and {max}
##
#org.hibernate.validator.constraints.CreditCardNumber.message        = invalid credit card number
#org.hibernate.validator.constraints.EAN.message                   = invalid {type} barcode
org.hibernate.validator.constraints.Email.message=\u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9\u306E\u5F62\u5F0F\u304C\u4E0D\u6B63\u3067\u3059
#org.hibernate.validator.constraints.Length.message                  = length must be between {min} and {max}
#org.hibernate.validator.constraints.LuhnCheck.message               = The check digit for ${validatedValue} is invalid, Luhn Modulo 10 checksum failed
#org.hibernate.validator.constraints.Mod10Check.message              = The check digit for ${validatedValue} is invalid, Modulo 10 checksum failed
#org.hibernate.validator.constraints.Mod11Check.message              = The check digit for ${validatedValue} is invalid, Modulo 11 checksum failed
#org.hibernate.validator.constraints.ModCheck.message                = The check digit for ${validatedValue} is invalid, ${modType} checksum failed
#org.hibernate.validator.constraints.NotBlank.message                = may not be empty
org.hibernate.validator.constraints.NotEmpty.message=\u5165\u529B\u5FC5\u9808\u9805\u76EE\u3067\u3059
#org.hibernate.validator.constraints.ParametersScriptAssert.message  = script expression "{script}" didn't evaluate to true
#org.hibernate.validator.constraints.Range.message                   = must be between {min} and {max}
#org.hibernate.validator.constraints.SafeHtml.message                = may have unsafe html content
#org.hibernate.validator.constraints.ScriptAssert.message            = script expression "{script}" didn't evaluate to true
#org.hibernate.validator.constraints.URL.message                     = must be a valid URL
##
#org.hibernate.validator.constraints.br.CNPJ.message                 = invalid Brazilian corporate taxpayer registry number (CNPJ)
#org.hibernate.validator.constraints.br.CPF.message                  = invalid Brazilian individual taxpayer registry number (CPF)
#org.hibernate.validator.constraints.br.TituloEleitoral.message      = invalid Brazilian Voter ID card number
# typemismatch

customValidator.phone.message  =  \u96FB\u8A71\u756A\u53F7\u306E\u5F62\u5F0F\u3067\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044
